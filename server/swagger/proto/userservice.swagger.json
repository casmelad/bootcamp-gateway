{
  "swagger": "2.0",
  "info": {
    "title": "proto/userservice.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "Users"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/users": {
      "get": {
        "summary": "List all users",
        "description": "List all users on the server.",
        "operationId": "Users_GetAllUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersGetAllUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Adds a user",
        "description": "Add a user to the server.",
        "operationId": "Users_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersCreateRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "summary": "Deletes a user",
        "description": "Deletes the user from the server",
        "operationId": "Users_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{user.id}": {
      "put": {
        "summary": "Update a user",
        "description": "Change properties of a user.",
        "operationId": "Users_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "The user id to update",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersUser"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{value}": {
      "get": {
        "summary": "Gets a user",
        "description": "Gets a user based on its email",
        "operationId": "Users_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "usersCodeResult": {
      "type": "string",
      "enum": [
        "UNKNOW",
        "OK",
        "NOTFOUND",
        "FAILED",
        "INVALIDINPUT"
      ],
      "default": "UNKNOW"
    },
    "usersCreateRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "The user email",
          "required": [
            "email"
          ]
        },
        "name": {
          "type": "string",
          "title": "The user name",
          "required": [
            "name"
          ]
        },
        "last_name": {
          "type": "string",
          "title": "The user last name"
        }
      },
      "required": [
        "email",
        "name"
      ]
    },
    "usersCreateResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/usersCodeResult",
          "title": "The status code of the response"
        },
        "user_id": {
          "type": "integer",
          "format": "int32",
          "title": "The user created"
        }
      }
    },
    "usersDeleteResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/usersCodeResult",
          "title": "The status code of the response"
        }
      }
    },
    "usersGetAllUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/usersUser"
          }
        }
      }
    },
    "usersGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/usersUser"
        }
      }
    },
    "usersUpdateResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/usersCodeResult",
          "title": "The status code of the response"
        }
      }
    },
    "usersUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "The user id to update",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "title": "The user email",
          "required": [
            "email"
          ]
        },
        "name": {
          "type": "string",
          "title": "The user name",
          "required": [
            "name"
          ]
        },
        "last_name": {
          "type": "string",
          "title": "The user last name"
        }
      },
      "required": [
        "email",
        "name"
      ]
    }
  },
  "externalDocs": {
    "description": "gRPC-gateway: Go Training",
    "url": "https://github.com/casmelad/LearningGo-Gateway"
  }
}
